service:
  name: transaction-service

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: ap-south-1
  environment:
    TRANSACTIONS_TABLE_NAME: ${self:custom.TransactionsTable.name}
    BRANCHES_TABLE_NAME: ${self:custom.BranchesTable.name}
    EMPLOYEES_TABLE_NAME: ${self:custom.EmployeesTable.name}
    RATES_TABLE_NAME: ${self:custom.RatesTable.name}
    CLIENTS_TABLE_NAME: ${self:custom.ClientsTable.name}
  iamRoleStatements:
    - ${file(iam/TransactionsTableIAM.yml):TransactionsTableIAM}
    - ${file(iam/BranchesTableIAM.yml):BranchesTableIAM}
    - ${file(iam/EmployeesTableIAM.yml):EmployeesTableIAM}
    - ${file(iam/RatesTableIAM.yml):RatesTableIAM}
    - ${file(iam/ClientsTableIAM.yml):ClientsTableIAM}

resources:
  Resources:
    TransactionsTable: ${file(resources/TransactionsTable.yml):TransactionsTable}
    BranchesTable: ${file(resources/BranchesTable.yml):BranchesTable}
    EmployeesTable: ${file(resources/EmployeesTable.yml):EmployeesTable}
    RatesTable: ${file(resources/RatesTable.yml):RatesTable}
    ClientsTable: ${file(resources/ClientsTable.yml):ClientsTable}
  
functions:
  createTransaction:
    handler: src/handlers/createTransaction.handler
    events:
      - http:
          method: POST
          path: /transaction
          cors: true

  getTransaction:
    handler: src/handlers/getTransaction.handler
    events:
      - http:
          method: GET
          path: /transaction/{id}
          cors: true

  getTransactionsByStatus:
    handler: src/handlers/getTransactionsByStatus.handler
    events:
      - http:
          method: GET
          path: /transactions/{status}
          cors: true

  getTransactionsByStatusAndBranchId:
    handler: src/handlers/getTransactionsByStatusAndBranchId.handler
    events:
      - http:
          method: GET
          path: /transactions
          request:
            template:
              application/json: '{ "status" : "$input.params(''status'')", "branchId": "$input.params(''branchId'')" }'
          cors: true

  updateTransactionStatus:
    handler: src/handlers/updateTransactionStatus.handler
    events:
      - http:
          method: PATCH
          path: /transaction/{id}/status
          cors: true

  getBranchInformation:
    handler: src/handlers/getBranchInformation.handler
    events:
      - http:
          method: GET
          path: /branch/{id}
          cors: true

  getEmployeeInformation:
    handler: src/handlers/getEmployeeInformation.handler
    events:
      - http:
          method: GET
          path: /user
          request:
            template:
              application/json: '{ "email" : "$input.params(''email'')" }'
          cors: true

  getActiveClientsByBranchId:
    handler: src/handlers/getActiveClientsByBranchId.handler
    events:
      - http:
          method: GET
          path: /client
          request:
            template:
              application/json: '{ "branchId" : "$input.params(''branchId'')", "status": "$input.params(''status'')" }'
          cors: true

  getAllRates:
    handler: src/handlers/getAllRates.handler
    events:
      - http:
          method: GET
          path: /rates
          cors: true

custom:
  TransactionsTable:
    name: !Ref TransactionsTable 
    arn: !GetAtt TransactionsTable.Arn
  BranchesTable:
    name: !Ref BranchesTable 
    arn: !GetAtt BranchesTable.Arn
  EmployeesTable:
    name: !Ref EmployeesTable
    arn: !GetAtt EmployeesTable.Arn
  RatesTable:
    name: !Ref RatesTable
    arn: !GetAtt RatesTable.Arn
  ClientsTable:
    name: !Ref ClientsTable
    arn: !GetAtt ClientsTable.Arn
  bundle:
    linting: false
